# MCP Client Configuration (Lab 14)
# This profile enables MCP client functionality to connect to external MCP servers

# Enable MCP client
spring.ai.mcp.client.enabled=true
spring.ai.mcp.client.name=spring-ai-training-client
spring.ai.mcp.client.version=1.0.0
spring.ai.mcp.client.request-timeout=30s

# STDIO Transport Configuration
# Configure STDIO connection to a file system MCP server
# Requires: npm install -g npx
spring.ai.mcp.client.stdio.connections.filesystem.command=npx
spring.ai.mcp.client.stdio.connections.filesystem.args=-y,@modelcontextprotocol/server-filesystem,/tmp

# Brave search server (requires BRAVE_API_KEY environment variable)
# Uncomment to enable:
# spring.ai.mcp.client.stdio.connections.brave.command=npx
# spring.ai.mcp.client.stdio.connections.brave.args=-y,@modelcontextprotocol/server-brave-search

# SQLite server (requires database file)
# Uncomment to enable:
# spring.ai.mcp.client.stdio.connections.sqlite.command=npx
# spring.ai.mcp.client.stdio.connections.sqlite.args=-y,@modelcontextprotocol/server-sqlite,--db-path,/path/to/database.db

# SSE Transport Configuration
# For servers that support Server-Sent Events (HTTP-based)
# Uncomment to connect to a local MCP server via SSE:
# spring.ai.mcp.client.sse.connections.weather.url=http://localhost:8080

# External JSON configuration (alternative to individual properties)
# You can also specify an external JSON file with server configurations:
# spring.ai.mcp.client.stdio.servers-configuration=classpath:mcp-servers-config.json

# Tool callback integration (usually enabled by default)
spring.ai.mcp.client.toolcallback.enabled=true

# Root change notifications
spring.ai.mcp.client.root-change-notification=true

# Disable web application for pure MCP client usage (optional)
# spring.main.web-application-type=none

# Logging configuration for MCP debugging
logging.level.org.springframework.ai.mcp=DEBUG
logging.level.org.springframework.ai.chat.client.advisor=DEBUG

# MCP client doesn't need Redis unless explicitly enabled with redis profile
# Both models available - will use @Qualifier in test to specify which one