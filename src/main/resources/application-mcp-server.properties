# MCP Server Configuration (Lab 15)
# This profile enables MCP server functionality to expose tools to AI clients

# Server identification
spring.ai.mcp.server.name=spring-ai-calculator-server
spring.ai.mcp.server.version=1.0.0
spring.ai.mcp.server.instructions=This server provides mathematical calculation tools including basic arithmetic, compound interest, and more.

# Server type (SYNC or ASYNC)
spring.ai.mcp.server.type=SYNC

# Transport Configuration

# For STDIO mode (works with Claude Desktop and command-line MCP clients)
spring.ai.mcp.server.stdio=true
spring.main.web-application-type=none
# Disable console logging patterns for STDIO mode
logging.pattern.console=

# For SSE mode (HTTP-based, works with web clients)
# Uncomment these lines and comment out the STDIO settings above to use SSE:
# spring.ai.mcp.server.stdio=false
# spring.ai.mcp.server.sse-message-endpoint=/mcp/messages
# spring.ai.mcp.server.transport=WEBMVC

# Server capabilities
spring.ai.mcp.server.capabilities.tool=true
spring.ai.mcp.server.capabilities.resource=false
spring.ai.mcp.server.capabilities.prompt=false
spring.ai.mcp.server.capabilities.completion=false

# Change notifications
spring.ai.mcp.server.tool-change-notification=true
spring.ai.mcp.server.resource-change-notification=false
spring.ai.mcp.server.prompt-change-notification=false

# Logging configuration (important for STDIO mode)
spring.main.banner-mode=off
logging.file.name=./target/mcp-server.log
logging.level.org.springframework.ai.mcp=INFO

# For debugging, you can enable more detailed logging:
# logging.level.org.springframework.ai.mcp=DEBUG
# logging.level.org.springframework.ai.tool=DEBUG

# MCP server doesn't need Redis unless explicitly enabled with redis profile
# Both models available - will use @Qualifier in test to specify which one